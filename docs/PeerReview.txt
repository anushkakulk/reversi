Review of Provider's Code


The main critique I have is that there was not clear documentation about the coordinate system
used/board representation. All that was mentioned was that they used "odd-r" horizontal coordinates, yet they did not
explain what "odd-r" coordinates are, what was actually contained in the board [][] which is  used in their model
implementation, making it extremely difficult to translate between our coordinate system and theirs (we had to continuously
ask them for clarifications about their coordinate system/board representation and such). Similarly,
the readme was severely lacking in details about how everything works together (model view controller
communication), and they were missing lots javadoc/comments for public methds in their model interfaces
, making it difficult to understand what these methods were doing/their purpose in the view's rendering. Furthermore,
they never specify what board dimensions are, and we had to figure out a lot of it through trying various
possibilities of what they could be. For reference, we refer to a board's size by the
side length of the hexagonic board and documented our code/units used thoroughly.

Another thing was the decision to use a 2d array as they did, meaning they had a lot of deliberate use
of null. We have always learned that it is good practice to avoid the use of null as much as possible,
but they use null to account for the column indent that comes with an odd-r coordinate system. For
example, to represent a board with a sidelength of 2, their board would look as such:
[null Tile Tile]
[Tile Tile Tile]
[null Tile Tile]
Overall, I was not too big of a fan of this use of null and null-checking, and believe
a map of tile positions could be much better design decision.

However, the rendering itself was done very nicely, and once I figured out how to translate from our
coordinate system to theirs, the view worked just as intended, and we were able to successfully listen
to player actions via an adapter of their view.

They also had a few issues with tightly coupling, which we had to repair. For example, they had no player
interface and so we had to modify their.